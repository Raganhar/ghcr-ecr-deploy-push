# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: auto deploy

on: 
  create:
    tags:
      - '*'
  workflow_dispatch:
  # push:
  #   tags:
  #     - '*'

env:
  AWS_REGION: eu-central-1                   # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: crosswalkpulumiecs-repo-5d9dc75           # set this to your Amazon ECR repository name
  ECS_SERVICE: CrosswalkPulumiEcs-service-c503a87                 # set this to your Amazon ECS service name
  ECS_CLUSTER: CrosswalkPulumiEcs-cluster-71d94f7                 # set this to your Amazon ECS cluster name
  ECS_TASK_DEFINITION: CrosswalkPulumiEcs-service-f5db99dc # set this to the path to your Amazon ECS task definition
                                               # file, e.g. .aws/task-definition.json
  CONTAINER_NAME: container           # set this to the name of the container in the
                                               # containerDefinitions section of your task definition

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "$GITHUB_CONTEXT"
        
      - name: "Find tag to release"
        env:
          IS_TAG_CONTEXT: ${{ github.ref_type == 'tag' }}
        run: |
          if ${IS_TAG_CONTEXT}; then
            TAG="${{github.ref_name}}"
          else
            git fetch --prune --unshallow
            TAG=$(git describe --tag --abbrev=0)
          fi
          echo "TAG=${TAG}" >> $GITHUB_ENV

      - name: container tag
        run: echo newly set env variable ${{env.TAG}}

      - name: Set env
        run: echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV
      - name: Test
        run: echo $GITHUB_SHA_SHORT
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@aaf69d68aa3fb14c1d5a6be9ac61fe15b48453a2

      - id: "lower_repo"
        uses: ASzc/change-string-case-action@v2
        with:
          string: ${{ github.event.repository.name }}

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull Image from ghcr.io
        id: build-image
        run: |
          echo "pulling image from ghcr"
          docker pull ghcr.io/raganhar/${{steps.lower_repo.outputs.lowercase}}:${{env.TAG}}
          
          echo "renaming/tagging image from to be the same as ECR image"
          docker tag ghcr.io/raganhar/${{steps.lower_repo.outputs.lowercase}}:${{env.TAG}} 078884735169.dkr.ecr.eu-central-1.amazonaws.com/crosswalkpulumiecs-repo-5d9dc75:latest
          
          echo "pushing image to ecr"
          docker push 078884735169.dkr.ecr.eu-central-1.amazonaws.com/crosswalkpulumiecs-repo-5d9dc75:latest

          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Force ECS update
        run: |
          aws ecs update-service --cluster ${{ env.ECS_CLUSTER }} --service ${{ env.ECS_SERVICE }} --force-new-deployment
          
      - name: Wait until stable
        run: |
          aws ecs wait services-stable --cluster ${{ env.ECS_CLUSTER }} --service ${{ env.ECS_SERVICE }}