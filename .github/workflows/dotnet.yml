name: build and push docker

on: 
  - workflow_dispatch
  - push

jobs:
  # generate_version:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     version: ${{ steps.generated-version.outputs.VERSION }}
  #     branchName: ${{ steps.gitversion.outputs.branchName }}
  #   steps:
  #   - name: Checkout the repository
  #     uses: actions/checkout@v2
  #     with:
  #       fetch-depth: 0

  #   - name: Install GitVersion
  #     uses: gittools/actions/gitversion/setup@v0.9.7
  #     with:
  #       versionSpec: '5.8.1'
    
  #   - name: Determine Version 
  #     id:   gitversion
  #     uses: gittools/actions/gitversion/execute@v0.9.7
    
  #   - name: Display GitVersion outputs
  #     id: generated-version
  #     run: |
  #       echo "::set-output name=VERSION::${{ steps.gitversion.outputs.semVer }}.$GITHUB_RUN_NUMBER-${{ steps.gitversion.outputs.shortSha }}"
    
  #   - name: Validate the GitVersion
  #     id: validate-version
  #     shell: pwsh
  #     run: |
  #       if ("${{ steps.gitversion.outputs.branchName }}" -like 'release/*') {
  #         echo "::set-output name=VERSION::${{ steps.generated-version.outputs.VERSION }}"
  #       }
  #       else {
  #         $version = "${{ steps.generated-version.outputs.VERSION }}" -replace '-beta', ''
  #         echo "::set-output name=VERSION::$version" 
  #       }


  build_docker_image:
    runs-on: ubuntu-latest
    # needs: "generate_version"
    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: |
        echo "$GITHUB_CONTEXT"
    - name: Checkout
      uses: actions/checkout@v2
      with:
          token: ${{ secrets.MY_PAT }}
          fetch-depth: 0
    - name: Branch name
      run: echo running on branch ${GITHUB_REF##*/}

    - name: "Get branch name and save to env"
      env:
        IS_PR: ${{ github.EVENT_NAME == 'pull_request' }}
      run: |
        if ${IS_PR}; then
          BASE_TAG="${GITHUB_HEAD_REF}"
        else
          BASE_TAG="${GITHUB_REF##*/}"
        fi

        echo "BASE_TAG=${BASE_TAG}" >> $GITHUB_ENV

    - name: Set Tag Name
      id: artifact_version
      run: echo "artifact_version=${{env.BASE_TAG}}.$(date +'%Y-%m-%d').b${{github.run_number}}" >> $GITHUB_ENV 

    - name: artifact version
      run: echo newly set env variable ${{env.BASE_TAG}}

    - name: container tag
      run: echo newly set env variable ${{env.artifact_version}}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - id: "lower_repo"
      uses: ASzc/change-string-case-action@v2
      with:
        string: ${{ github.event.repository.name }}

    - name: Authenticate with the Github Container Registry 🔐
      run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u USERNAME --password-stdin

    - name: Build and push docker image 🏗 📦
      id: build-n-push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: Dockerfile
        platforms: linux/amd64
        push: true
        tags: ghcr.io/raganhar/${{steps.lower_repo.outputs.lowercase}}:${{env.artifact_version}}

    - name: Create tag
      if: steps.build-n-push.outcome == 'success' 
      run: |
        git tag ${{ env.artifact_version }}
        git push --tags